<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="python__utils_8py" kind="file" language="Python">
    <compoundname>python_utils.py</compoundname>
    <innerclass refid="classpython__utils_1_1_spike_sim" prot="public">python_utils::SpikeSim</innerclass>
    <innernamespace refid="namespacepython__utils">python_utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>stats</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>signal</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>curve_fit</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>glob</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yaml</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">save_pkl(obj,<sp/>path):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Function<sp/>saving<sp/>an<sp/>object<sp/>as<sp/>a<sp/>pickle<sp/>file.</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>obj:<sp/>python<sp/>object<sp/>(list,<sp/>dictionary...)<sp/>to<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>obj:<sp/>generic</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>path:<sp/>path<sp/>to<sp/>the<sp/>object<sp/>to<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>path:<sp/>string</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickle.dump(obj,<sp/>f,<sp/>pickle.HIGHEST_PROTOCOL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">load_pkl(path):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Function<sp/>loading<sp/>an<sp/>object<sp/>from<sp/>a<sp/>pickle<sp/>file.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>path:<sp/>path<sp/>to<sp/>the<sp/>object<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>path:<sp/>string</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pickle.load(f)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">readSpikes(file):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Function<sp/>reading<sp/>spike<sp/>times<sp/>in<sp/>the<sp/>format<sp/>produced<sp/>by<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>file:<sp/>path<sp/>to<sp/>the<sp/>file<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>spike<sp/>times</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:type<sp/>file:<sp/>string</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>in_file:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>in_file.readlines():</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_list<sp/>=<sp/>[float(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line.split()]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(l)<sp/>&lt;=<sp/>round(n_list[0]):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l.extend(<sp/>[<sp/>[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(<sp/>(round(n_list[0])<sp/>-<sp/>len(l)<sp/>+<sp/>1)<sp/>)<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[round(n_list[0])].extend(n_list[1:])</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(l)):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[i]<sp/>=<sp/>np.array(l[i])</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">newReadSpikes(file,<sp/>n):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Function<sp/>reading<sp/>spike<sp/>times<sp/>in<sp/>the<sp/>format<sp/>produced<sp/>by<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>file:<sp/>path<sp/>to<sp/>the<sp/>file<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>spike<sp/>times</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>:type<sp/>file:<sp/>string</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>[<sp/>[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n)<sp/>]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>in_file:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>in_file.readlines():</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_list<sp/>=<sp/>[float(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line.split()]</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/>&lt;=<sp/>round(n_list[0]):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;ERROR:<sp/>non<sp/>coherent<sp/>n:<sp/>{n_list[0]}&gt;={n}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(round(n_list[0]),<sp/>n,<sp/>l)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[round(n_list[0])].extend(n_list[1:])</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(l)):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[i]<sp/>=<sp/>np.array(l[i])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classpython__utils_1_1_spike_sim" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim" kindref="compound">SpikeSim</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Class<sp/>loading<sp/>and<sp/>parsing<sp/>files<sp/>given<sp/>by<sp/>a<sp/>simulation.</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>main<sp/>attributes<sp/>are<sp/>the<sp/>simulation<sp/>parameters<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>results:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>end_t:<sp/>end<sp/>time<sp/>of<sp/>simulation</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>dt:<sp/>time<sp/>resolution<sp/>of<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>input_mode:<sp/>external<sp/>input<sp/>mode:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>0<sp/>(base<sp/>mode):<sp/>each<sp/>neuron<sp/>receives<sp/>an<sp/>indipendent<sp/>poisson<sp/>signal<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>mean<sp/>frequency<sp/>=<sp/>SubNetwork::ext_in_rate</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1<sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>implemented)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>data:<sp/>dictionary<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>spike<sp/>times<sp/>corresponding<sp/>to<sp/>each<sp/>population;<sp/>data[</highlight><highlight class="stringliteral">&apos;pop&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>list<sp/>of<sp/>np.arrays<sp/>each<sp/>containing<sp/>the<sp/>activity<sp/>of<sp/>a<sp/>neuron</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>subnets:<sp/>a<sp/>list<sp/>of<sp/>the<sp/>SubNetworks<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1acda86f9d59a80f3bd4a05b76e66b951c" kindref="member">__init__</ref>(self,<sp/>path,<sp/>sim_fname,<sp/>neglect_t,<sp/>neglect_t_end=-1,<sp/>config_fname=&apos;&apos;):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Class<sp/>constructor:</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>path:<sp/>path<sp/>to<sp/>the<sp/>directory<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>output<sp/>simulation<sp/>files<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>configuration<sp/>files</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>path:<sp/>string</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>sim_fname:<sp/>name<sp/>of<sp/>the<sp/>simulation<sp/>configuration<sp/>file<sp/>(inside<sp/>the<sp/>directory<sp/>matched<sp/>by<sp/>path)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>sim_fname:<sp/>string</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>neglect_t:<sp/>time<sp/>(</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ms)<sp/>to<sp/>be<sp/>neglected<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>sim_fname:<sp/>float</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>neglect_t_end:<sp/>time<sp/>(</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ms)<sp/>to<sp/>be<sp/>neglected<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>sim_fname:<sp/>float</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>config_fname:<sp/>name<sp/>of<sp/>the<sp/>subnets_config_yaml<sp/>configuration<sp/>file<sp/>(inside<sp/>the<sp/>directory<sp/>matched<sp/>by<sp/>path)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>sim_fname:<sp/>string</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir<sp/>=<sp/>path</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a43eeb7ffc39474e77279decc5877946b" kindref="member">sim_filename</ref>sim_filename<sp/>=<sp/>sim_fname</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start<sp/>=<sp/>neglect_t</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>=<sp/>neglect_t_end</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ad511228a23b58e8668a3cedb67f5c215" kindref="member">dt</ref>dt<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a25e081f385ac036ff92a43b2c4de2330" kindref="member">input_mode</ref>input_mode<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ab25a98a905a958a037b1dbd74c367a31" kindref="member">omegas</ref>omegas<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a50ad7c6da883b0defb7b91b6b8f4558b" kindref="member">Ns</ref>Ns<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac7879b09bf4a90bd5ab8882764651232" kindref="member">getParameterValues</ref>getParameterValues()</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_fname!=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+config_fname)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>file:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_dict<sp/>=<sp/>yaml.load(file,<sp/>Loader=yaml.FullLoader)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>in_dict:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ab25a98a905a958a037b1dbd74c367a31" kindref="member">omegas</ref>omegas[d[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">]]<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&apos;osc_omega&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a50ad7c6da883b0defb7b91b6b8f4558b" kindref="member">Ns</ref>Ns[d[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">]]<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&apos;N&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a44434ae5902d8af65c26c3a4d5d810d8" kindref="member">loadData</ref>loadData()</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a153669aadc621a0ea51a7a22b3345d5a" kindref="member">necglectTime</ref>necglectTime()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1ac7879b09bf4a90bd5ab8882764651232" kindref="member">getParameterValues</ref>(self):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>initializing<sp/>the<sp/>simulation<sp/>parameters&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+self.<ref refid="classpython__utils_1_1_spike_sim_1a43eeb7ffc39474e77279decc5877946b" kindref="member">sim_filename</ref>sim_filename)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>file:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_dict<sp/>=<sp/>yaml.load(file,<sp/>Loader=yaml.FullLoader)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_t_end<sp/>=<sp/>in_dict[</highlight><highlight class="stringliteral">&apos;t_end&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>&lt;<sp/>0.:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>=<sp/>dict_t_end</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>&gt;<sp/>dict_t_end:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;ERROR:<sp/>t_end<sp/>is<sp/>too<sp/>big:<sp/>max<sp/>=<sp/>{dict_t_end},<sp/>passed<sp/>=<sp/>{self.t_end}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ad511228a23b58e8668a3cedb67f5c215" kindref="member">dt</ref>dt<sp/>=<sp/>in_dict[</highlight><highlight class="stringliteral">&apos;dt&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a25e081f385ac036ff92a43b2c4de2330" kindref="member">input_mode</ref>input_mode<sp/>=<sp/>in_dict[</highlight><highlight class="stringliteral">&apos;input_mode&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a25e081f385ac036ff92a43b2c4de2330" kindref="member">input_mode</ref>input_mode<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paper_configfile<sp/>=<sp/>in_dict[</highlight><highlight class="stringliteral">&apos;input_mode_config&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len(paper_configfile.split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>!=1<sp/>):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paper_configfile<sp/>=<sp/>paper_configfile.split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[-1]</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">+paper_configfile)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>file_paper:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paper_dict<sp/>=<sp/>yaml.load(file_paper,<sp/>Loader=yaml.FullLoader)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1a44434ae5902d8af65c26c3a4d5d810d8" kindref="member">loadData</ref>(self):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>loading<sp/>spike<sp/>times<sp/>for<sp/>each<sp/>SubNetwork&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subnets_files<sp/>=<sp/>glob.glob(self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/*_spikes.txt&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>subnets_files:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>re.split(</highlight><highlight class="stringliteral">&apos;/|_&apos;</highlight><highlight class="normal">,<sp/>f)[-2]</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[pop]<sp/>=<sp/>newReadSpikes(f,<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a50ad7c6da883b0defb7b91b6b8f4558b" kindref="member">Ns</ref>Ns[pop])</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets.append(pop)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets<sp/>=<sp/>sorted(self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1a153669aadc621a0ea51a7a22b3345d5a" kindref="member">necglectTime</ref>(self):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>removing<sp/>the<sp/>spikes<sp/>occurring<sp/>before<sp/>t_start<sp/>and<sp/>after<sp/>t_end<sp/>(if<sp/>&gt;<sp/>0)&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(<sp/>len(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i])<sp/>):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>&lt;<sp/>0.:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j]<sp/>=<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j][self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j]&gt;self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start]<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j]<sp/>=<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j][<sp/>np.logical_and(<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j]&gt;self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start,<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[i][j]&lt;self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>)<sp/>]<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1a240f97626ab39ee7bec382158f49cd52" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>printing<sp/>the<sp/>simulation<sp/>parameters&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Simulation<sp/>data<sp/>from:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a9f10e66c363a075d2d294e3a716355e5" kindref="member">input_dir</ref>input_dir)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\t<sp/>simulation<sp/>config<sp/>file:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a43eeb7ffc39474e77279decc5877946b" kindref="member">sim_filename</ref>sim_filename)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\t<sp/>subnets<sp/>in<sp/>the<sp/>network:<sp/>&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;\t<sp/>t_start<sp/>=<sp/>{self.t_start}<sp/>ms&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;\t<sp/>t_end<sp/>=<sp/>{self.t_end}<sp/>ms&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;\t<sp/>dt<sp/>=<sp/>{self.dt}<sp/>ms&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;\t<sp/>input_mode<sp/>=<sp/>{self.input_mode}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">saveData(self,<sp/>path):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_pkl(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data,<sp/>path)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1a9386dc38a52e774f927386dbd58bae88" kindref="member">histogram</ref>(self,<sp/>pop<sp/>=<sp/>&apos;&apos;,<sp/>res=1.,<sp/>save_img=&apos;&apos;):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>showing<sp/>or<sp/>saving<sp/>the<sp/>spiking<sp/>activity<sp/>of<sp/>a<sp/>given<sp/>subnet</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>pop:<sp/>desidered<sp/>population;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;all&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>passed<sp/>all<sp/>population<sp/>are<sp/>showed.</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>pop:<sp/>string</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>res:<sp/>time<sp/>width<sp/>of<sp/>each<sp/>bin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>histogram</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>pop:<sp/>float</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>save_img:<sp/>path<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>save_img:<sp/>string</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_passed<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pop<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_passed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pop.lower()<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;all&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.figure()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(sorted(self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets)):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(p)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>len(self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cols<sp/>=<sp/>1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l==1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>2</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>round(l/cols)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l%2==0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>l==1)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>int(l/cols)+1</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.subplot(rows,cols,<sp/>i+1)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.ylabel(p)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&apos;t<sp/>[ms]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.hist(<sp/>np.concatenate(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[p]),<sp/>bins=int((self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start)/res)<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:<sp/>print(e)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.tight_layout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.savefig(self.input_dir+&apos;/activity.png&apos;,<sp/>dpi=500)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pop<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>input(</highlight><highlight class="stringliteral">&apos;histogram:<sp/>enter<sp/>subnetwork:<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pop.lower()<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;stop&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>pop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;No<sp/>subnet<sp/>with<sp/>name<sp/>&quot;{pop}&quot;,<sp/>try<sp/>again...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.hist(np.concatenate(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[pop]),<sp/>bins=int((self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start)/res))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>save_img<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.savefig(save_img,<sp/>dpi<sp/>=<sp/>500)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.close()</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pop_passed:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/>pop<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython__utils_1_1_spike_sim_1a45978f799feff9a818006d46e16fa868" kindref="member">MeanActivity</ref>(self):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Method<sp/>computing<sp/>the<sp/>mean<sp/>spiking<sp/>activity<sp/>of<sp/>the<sp/>subnets&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAct<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ns<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MActPerN<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[s])<sp/>&gt;0:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts<sp/>=<sp/>len(<sp/>np.concatenate(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[s])<sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/>counts<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAct.append(<sp/>counts/(self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start)<sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(self.<ref refid="classpython__utils_1_1_spike_sim_1a0cb526064a6ac969500c217ef0f94766" kindref="member">data</ref>data[s])</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ns.append(n)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MActPerN.append(counts/n/(self.<ref refid="classpython__utils_1_1_spike_sim_1ac580754ac37ea4773a9c5c9ea54f839f" kindref="member">t_end</ref>t_end<sp/>-<sp/>self.<ref refid="classpython__utils_1_1_spike_sim_1a642971afa9a759c4778eabd196337d8d" kindref="member">t_start</ref>t_start))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MActPerN.append(0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets[i]<sp/>:<sp/>[<sp/>MAct[i],<sp/>Ns[i],<sp/>MActPerN[i]<sp/>]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classpython__utils_1_1_spike_sim_1a744b024fd9526100204d7564fcdbcc82" kindref="member">subnets</ref>subnets))}</highlight></codeline>
    </programlisting>
    <location file="/Users/andrea/Documents/PhD/repo_git/Energy-Efficient-Touch-Localization/src/python_utils.py"/>
  </compounddef>
</doxygen>
