<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="model_8hpp" local="yes">model.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/andrea/Documents/PhD/repo_git/Energy-Efficient-Touch-Localization/src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andrea/Documents/PhD/repo_git/Energy-Efficient-Touch-Localization/src/main.cpp" line="6" column="5" bodyfile="/Users/andrea/Documents/PhD/repo_git/Energy-Efficient-Touch-Localization/src/main.cpp" bodystart="6" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;model.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RANDOM<sp/>GENERATOR<sp/>INITIALIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed<sp/>=<sp/>DBL_MAX;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>seed<sp/>=<sp/>DBL_MAX<sp/>for<sp/>random<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_random_generator" kindref="compound">RandomGenerator</ref><sp/><sp/><sp/><sp/><sp/>g(seed);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tERROR:<sp/>input_sim_yaml<sp/>not<sp/>passed<sp/>as<sp/>command<sp/>line<sp/>argument&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>sim<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>argv[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sim_yaml<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_in(input_sim_yaml);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::Node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_par<sp/>=<sp/>YAML::Load(f_in);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s,<sp/>input_mode_config;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status,<sp/>evolve_only;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue_s;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed<sp/>!=<sp/>DBL_MAX)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SEED<sp/>fixed<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>seed<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SEED<sp/>not<sp/>fixed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>is<sp/>going<sp/>to<sp/>start<sp/>with<sp/>the<sp/>following<sp/>parameters:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t_end\t\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;t_end&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dt\t\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;dt&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input_mode\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;input_mode&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;n_step\t\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;n_step&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;out_dir\t\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subnets_config_yaml\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;subnets_config_yaml&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;weights_config_yaml\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;weights_config_yaml&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connections_config_yaml\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;connections_config_yaml&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;to_save_config_yaml\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;to_save_config_yaml&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;training_config_yaml\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;training_config_yaml&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;input_mode&quot;</highlight><highlight class="normal">].as&lt;unsigned&gt;()==2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input_mode_config\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;input_mode_config&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pay<sp/>attention<sp/>if<sp/>you<sp/>parallelise:<sp/>input_mode_config<sp/>file<sp/>is<sp/>read<sp/>with<sp/>a<sp/>bit<sp/>of<sp/>delay!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_mode_config<sp/>=<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;input_mode_config&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>input_mode_config<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>mkdir(s.c_str(),<sp/>0755);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>0:<sp/>directory<sp/>correctly<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>1:<sp/>directory<sp/>already<sp/>existing<sp/>or<sp/>path<sp/>not<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tNote:<sp/>wrong<sp/>or<sp/>already<sp/>existing<sp/>out_dir<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\nContinue?<sp/>[y<sp/>or<sp/>n]:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline<sp/>(cin,<sp/>continue_s);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(continue_s==</highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Terminating...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>dir:<sp/>%s\n&quot;</highlight><highlight class="normal">,strerror(errno));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(continue_s==</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(<sp/>(</highlight><highlight class="stringliteral">&quot;rm<sp/>-r<sp/>&quot;</highlight><highlight class="normal">+sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()).c_str()<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>mkdir(s.c_str(),<sp/>0755);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tERROR:<sp/>Something<sp/>went<sp/>wrong<sp/>creating<sp/>the<sp/>output<sp/>directory:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tERROR:<sp/>non<sp/>valid<sp/>input:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>continue_s<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">].as&lt;string&gt;()==</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evolve_only=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evolve_only=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;training_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>config<sp/>files<sp/>in<sp/>out_dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;subnets_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;weights_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;connections_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;to_save_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;cp<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>input_sim_yaml<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>./&quot;</highlight><highlight class="normal"><sp/>+<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()<sp/>).c_str());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tconfig<sp/>files<sp/>have<sp/>been<sp/>read<sp/>and<sp/>copied&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_network" kindref="compound">Network</ref><sp/>Net(sim_par[</highlight><highlight class="stringliteral">&quot;t_end&quot;</highlight><highlight class="normal">].as&lt;double&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;dt&quot;</highlight><highlight class="normal">].as&lt;double&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;input_mode&quot;</highlight><highlight class="normal">].as&lt;unsigned&gt;(),<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_and_correct_config(sim_par[</highlight><highlight class="stringliteral">&quot;subnets_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_and_correct_config(sim_par[</highlight><highlight class="stringliteral">&quot;weights_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_and_correct_config(sim_par[</highlight><highlight class="stringliteral">&quot;connections_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()),<sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_and_correct_config(sim_par[</highlight><highlight class="stringliteral">&quot;to_save_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_and_correct_config(sim_par[</highlight><highlight class="stringliteral">&quot;training_config_yaml&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;()),<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_par[</highlight><highlight class="stringliteral">&quot;out_dir&quot;</highlight><highlight class="normal">].as&lt;string&gt;(),<sp/>g,<sp/>input_mode_config,<sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_par[</highlight><highlight class="stringliteral">&quot;n_step&quot;</highlight><highlight class="normal">].as&lt;unsigned&gt;(),<sp/>sim_par[</highlight><highlight class="stringliteral">&quot;repeat_specific_I_e&quot;</highlight><highlight class="normal">].as&lt;unsigned&gt;(),<sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evolve_only</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/andrea/Documents/PhD/repo_git/Energy-Efficient-Touch-Localization/src/main.cpp"/>
  </compounddef>
</doxygen>
